#!/usr/bin/env --split-string=${JDK_HOME}/bin/java @building/Makeshift/java_arguments @building/Makeshift/java_javac_arguments \c [SS]
package building.Makeshift; // [AFN]

// Usage:  logging-test
//
// This command runs directly from the present source file, which is uncompiled during builds.

import java.util.logging.Level;
import java.util.logging.Logger;

import static java.util.logging.Level.*;


/** A shell command to test the Java logger.  It logs a test message
  * at each of the standard logging levels predefined by Java.
  */
public final class LoggingTestCommand { // [AFN]



    private LoggingTestCommand() {}



    /** Takes a `logging-test` command from the shell and executes it.
      */
    public static void main( final String[] arguments ) {
        if( arguments.length != 0 ){
            System.err.println( "Usage: logging-test" );
            System.exit( 1 ); }
        new LoggingTestCommand().execute(); }



////  P r i v a t e  ////////////////////////////////////////////////////////////////////////////////////


    /** Executes the command.
      */
    private void execute() {
        logger.log( OFF, """
          Logging at levels `OFF`, `SEVERE`, `WARNING`, `INFO`, \
          `CONFIG`, `FINE`, `FINER`, `FINEST` and `ALL`:""" );
        test( OFF );
        test( SEVERE );
        test( WARNING );
        test( INFO );
        test( CONFIG );
        test( FINE );
        test( FINER );
        test( FINEST );
        test( ALL ); }



    private final Logger logger = Logger.getLogger( "building.Makeshift" );
      // The logger proper to Makeshift.



    /** Logs a test message at the given level.
      */
    private void test( final Level level ) {
        logger.log( level, "Testing at level " + level.toString() ); }}



// NOTES
// ─────
//   AFN  Atypical file naming is allowed here, as explained in `./build`.
//
//   SS · Long form `--split-string` is for Emacs, as explained in `./build`.



                                                        // Copyright © 2020  Michael Allan.  Licence MIT.
