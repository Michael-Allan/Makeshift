#!/usr/bin/env --split-string=${JDK_HOME}/bin/java @building/java_arguments \c [SS]
package building; // [AFN]

// Usage from working directory `<PROJECTS>/`:  build <PROJECT>/ <target>…


/** A shell command to build the software of a given project.  It summons the project’s dedicated
  * software builder to compile the project code and prepare it for use.
  */
public final class BuildCommand { // [AFN]



    private BuildCommand() {}



    /** Builds the software of a given project according to the arguments, as described
      * in the build instructions.
      *
      *     @see http://reluk.ca/project/building/build_instructions.brec
      */
    public static void main( final String[] arguments ) {
        if( arguments.length < 2 ){
            System.err.println( "Usage: build <PROJECT>/ <target>..." );
            return; }

        throw new UnsupportedOperationException( "Yet to be implemented" ); }}



// NOTES
// ─────
//   AFN  Atypical file naming is allowed here.  ‘The compiler does not enforce the optional restriction
//        defined at the end of JLS §7.6, that a type in a named package should exist in a file whose
//        name is composed from the type name followed by the .java extension.’
//        http://openjdk.java.net/jeps/330
//        https://docs.oracle.com/javase/specs/jls/se14/html/jls-7.html#jls-7.6
//
//   SS · Here the long form `--split-string` (as opposed to `-S`) enables Emacs tp recognize this file
//        as Java source code.  See the note entitled ‘source-launch files encoded with a shebang’ at
//        `http://reluk.ca/project/Java/Emacs/user_instructions.brec`.



                                       // Copyright © 2020, Michael Allan and contributors.  Licence MIT.
